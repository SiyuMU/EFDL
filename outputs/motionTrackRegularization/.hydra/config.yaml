training:
  max_steps: 100000
  grad_agg_freq: 1
  rec_results_freq: 1000
  rec_validation_freq: 1000000
  rec_inference_freq: ${training.rec_results_freq}
  rec_monitor_freq: ${training.rec_results_freq}
  rec_constraint_freq: 10000000
  save_network_freq: 1000
  print_stats_freq: 100
  summary_freq: 1000
  amp: false
  amp_dtype: float16
  ntk:
    use_ntk: false
    save_name: null
    run_freq: 1000
graph:
  func_arch: false
  func_arch_allow_partial_hessian: true
stop_criterion:
  metric: null
  min_delta: null
  patience: 50000
  mode: min
  freq: 1000
  strict: false
profiler:
  profile: false
  start_step: 0
  end_step: 100
  name: nvtx
network_dir: .
initialization_network_dir: ''
save_filetypes: vtk
summary_histograms: false
jit: true
jit_use_nvfuser: true
jit_arch_mode: only_activation
jit_autograd_nodes: false
cuda_graphs: true
cuda_graph_warmup: 20
find_unused_parameters: false
broadcast_buffers: false
device: ''
debug: false
run_mode: train
arch:
  fully_connected:
    arch_type: fully_connected
    input_keys: ???
    output_keys: ???
    detach_keys: ???
    scaling: null
    layer_size: 512
    nr_layers: 6
    skip_connections: false
    activation_fn: silu
    adaptive_activations: false
    weight_norm: true
models: ???
loss:
  _target_: modulus.loss.aggregator.Sum
  weights: null
optimizer:
  _params_:
    compute_gradients: adam_compute_gradients
    apply_gradients: adam_apply_gradients
  _target_: torch.optim.Adam
  lr: 0.01
  betas:
  - 0.9
  - 0.999
  eps: 1.0e-08
  weight_decay: 0.0
  amsgrad: false
scheduler:
  _target_: custom
  _name_: tf.ExponentialLR
  decay_rate: 0.97
  decay_steps: 500
batch_size:
  interior: 10000
  anchor: 1000
custom:
  CUDA_DEVICE: 0
  b_coef_file_format: t{0:d}to{1:d}_0.txt
  time_point_num: 26
  training_folder: TRAINING_SET
  stlt0: t0.stl
  fileScale: 1000.0
  length_scale_in_mm: 1.0
  num_of_block: 2
  hidden_layer_per_NN: 2
  result_nodes: 64
  input_all: null
  sample_ratio: 5.0
  volume_anchor_file: anchor.txt
  smooth_time_file: smooth.txt
